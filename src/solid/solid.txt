SOLID PRINCIPLES

Single Responsibility
Each class should have only one sole purpose,
and nor be filled with excessive functionality

Open Closed
Classes should be open for extension closed for modification

You should not have to rewrite an existing class for implementing new features

Liskov Substitution
This means that every subclass or derived class should be substitutable for their base or parent class

Interface Segregation
Interface should not force classes to implement
what they can't do
Large interface should be divided into small ones

Dependency Inversion
Components on abstraction not on concretions
