package cources.stepic.base.base.primitive;
public class Biti2115 {

        public static void main(String[] args)  {

            System.out.println(flipBit(6, 3));
        }

    public static int flipBit(int value, int bitIndex) {

       /* Реализуйте метод flipBit, изменяющий значение одного бита заданного целого числа на противоположное.
        Данная задача актуальна, например, при работе с битовыми полями.

        Договоримся, что биты нумеруются от младшего (индекс 1) к старшему (индекс 32).

        Вводим заданое число value и с двигаем на указаное количество бит bitIndex;
        На вход подается: 4, 2. Надо в числе 4,
         которое в двоичном виде = 0100 изменить второй бит на противоположный,
         будет 0110 в двоичном виде, в десятичном это число = 6.
         Поменять бит на противоположный можно логической операцией с соответствующей маской.


       bitIndex = 2 - 1; отчет идет с нуля
       return  0100 ^ 0001 << 2 - 1


*/


        return value ^ 1 <<  bitIndex - 1;
    }

}



